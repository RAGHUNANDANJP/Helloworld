pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                echo 'Git Clone The Repo'
                git 'https://github.com/RAGHUNANDANJP/Helloworld.git'
            }
        }
        stage('Unit Test') {
            steps {
                echo 'Build  The Project'
                sh "mvn -Dmaven.test.failure.ignore=true clean package"
            }
        }
        stage('Deploy to Development') {
            steps {
                echo 'Deploy the project to Tomcat'
               // deploy adapters: [tomcat9(credentialsId: 'tomcat', path: '', url: 'http://52.221.200.199:8080/')], contextPath: null, war: '**/*.war'
            }
        }
        stage('Manual Approval - Staging') {
            steps {
                // Notify developers for manual approval
            }
            when {
                beforeAgent true
                expression {
                    currentBuild.result == null
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                // Deploy to staging environment
            }
        }
        stage('Integration Test') {
            steps {
                // Run integration tests
            }
        }
        stage('Smoke Test') {
            steps {
                // Perform smoke tests
            }
        }
        stage('Manual Approval - Production') {
            steps {
                // Notify QA team for manual approval
            }
            when {
                beforeAgent true
                expression {
                    currentBuild.result == null
                }
            }
        }
        stage('Deploy to Production') {
            steps {
                // Deploy to production environment
            }
        }
        stage('End-to-End Test') {
            steps {
                // Run end-to-end tests
            }
        }
        stage('Performance Test') {
            steps {
                // Perform performance testing
            }
        }
    }
}
